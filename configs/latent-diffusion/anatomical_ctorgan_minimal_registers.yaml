# Anatomical LDM with minimal register capacity
# Tests if fewer, lower-dimensional registers can still provide anatomical guidance

model:
  base_learning_rate: 1.0e-06
  target: ldm.models.diffusion.anatomical_ddpm.AnatomicalLatentDiffusion
  params:
    linear_start: 0.0015
    linear_end: 0.0205
    log_every_t: 100
    timesteps: 1000
    loss_type: l1
    first_stage_key: image
    image_size: 64
    channels: 3
    
    # Anatomical-specific parameters
    anatomical_mask_key: segmentation
    anatomical_loss_weight: 1.0  # Keep default weight
    progressive_anatomical_training: true
    anatomical_warmup_steps: 10000
    use_anatomical_inference: true

    scheduler_config:
      target: ldm.lr_scheduler.LambdaLinearScheduler
      params:
        warm_up_steps: [ 10000 ]
        cycle_lengths: [ 10000000000000 ]
        f_start: [ 1.e-6 ]
        f_max: [ 1. ]
        f_min: [ 1. ]

    unet_config:
      target: ldm.modules.diffusionmodules.anatomical_openaimodel.AnatomicalUNetModel
      params:
        image_size: 64
        in_channels: 3
        out_channels: 3
        model_channels: 128
        attention_resolutions:
        - 32
        - 16
        - 8
        num_res_blocks: 2
        channel_mult:
        - 1
        - 4
        - 8
        num_heads: 8
        
        # MINIMAL REGISTER CONFIGURATION
        use_anatomical_registers: true
        num_anatomical_classes: 6
        anatomical_register_dim: 128  # Reduced from 512 (4x smaller)
        num_registers_per_class: 1    # Reduced from 4 (single register per class)
        anatomical_loss_weight: 1.0
        use_timestep_aware_registers: false
        anatomical_attention_heads: 4  # Reduced from 8 (fewer heads for lower dim)

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 3
        ckpt_path: logs/2025-06-20T17-11-10_autoencoder_kl_64x64x3_ctorgan/checkpoints/last.ckpt
        ddconfig:
          double_z: True
          z_channels: 3
          resolution: 256
          in_channels: 1
          out_ch: 1
          ch: 128
          ch_mult: [ 1,2,4 ]
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config: "__is_unconditional__"

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 12
    num_workers: 5
    wrap: False
    train:
      target: ldm.data.medical_images.CTOrganTrain
      params:
        size: 256
        load_segmentations: true
    validation:
      target: ldm.data.medical_images.CTOrganValidation
      params:
        size: 256
        load_segmentations: true

lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 5000
        max_images: 8
        increase_log_steps: False
    
    early_stop_callback:
      target: pytorch_lightning.callbacks.EarlyStopping
      params:
        monitor: val/loss
        patience: 10
        mode: min
        verbose: True

  trainer:
    benchmark: True
    max_epochs: 400